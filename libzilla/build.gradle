apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'license'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MINI_SDK_VERSION as int
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.github.snowdream.android.util:log:1.0.4'
    compile 'joda-time:joda-time:2.3'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile 'com.mobsandgeeks:android-saripaar:1.0.3'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.android.support:support-v4:22.2.0'
}

license {

    sourceSets {
        main.java.srcDirs = android.sourceSets.main.java.srcDirs
        main.resources.srcDirs = android.sourceSets.main.resources.srcDirs
    }

    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = DEVELOPER_ID

}


afterEvaluate { project ->

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }

    task javadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.srcDirs
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", System.getenv("ANDROID_HOME") + "/docs/reference"
        }
        classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

}



install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                name ARTIFACT_NAME
                description ARTIFACT_DESCRIPTION
                url SITE_URL

                licenses {
                    license {
                        name LICENCE_NAME
                        url LICENCE_URL
                        distribution LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }
                issueManagement {
                    system ISSUE_SYSTEM
                    url ISSUE_URL
                }

                scm {
                    connection SCM_CONNECTION
                    developerConnection SCM_DEV_CONNECTION
                    url SCM_URL

                }
            }
        }
    }
}


def getNexusUser() {
    return hasProperty('NEXUS_USER') ? NEXUS_USER : ""
}

def getNexusPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

def getBintrayUser() {
    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
}

def getBintrayKey() {
    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
}

def getGpgPassphrase() {
    return hasProperty('BINTRAY_GPG_PASSPHRASE') ? BINTRAY_GPG_PASSPHRASE : ""
}

bintray {

    user = bintrayUser
    key = bintrayKey

    configurations = ['archives']

    dryRun = false
    publish = true

    pkg {
        repo = "maven"
        name = ARTIFACT_NAME
        desc = ARTIFACT_DESCRIPTION
        websiteUrl = SITE_URL
        issueTrackerUrl = ISSUE_URL
        vcsUrl = SCM_URL
        licenses = ["Apache-2.0"]
        labels = ['android']
        publicDownloadNumbers = true

        version {
            gpg {
                sign = true
                passphrase = gpgPassphrase
            }

            mavenCentralSync {
                sync = true
                user = nexusUser
                password = nexusPassword
                close = '1'
            }

        }

    }

}